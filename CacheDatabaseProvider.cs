/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

/* Cache ADO .Net reference here: http://docs.intersystems.com/latest/csp/docbook/DocBook.UI.Page.cls?KEY=GBMP */

using OutSystems.HubEdition.Extensibility.Data;
using OutSystems.HubEdition.Extensibility.Data.ConfigurationService;
using OutSystems.RuntimeCommon;
using OutSystems.HubEdition.DatabaseProvider.Cache.Configuration;

namespace OutSystems.HubEdition.DatabaseProvider.Cache {

    /// <summary>
    /// Represents a database management system.
    /// </summary>
    public class CacheDatabaseProvider : BaseDatabaseProvider {

        private readonly IProviderProperties properties;

        public static readonly IDatabaseProvider Instance = new CacheDatabaseProvider();

        public CacheDatabaseProvider() {
            properties = new CacheProviderProperties(this);
        }


        /// <summary>
        /// Returns the services provided by the DBMS.
        /// </summary>
        /// <param name="databaseConfiguration">The database configuration.</param>
        public override IDatabaseServices GetIntegrationDatabaseServices(IRuntimeDatabaseConfiguration databaseConfiguration) {
            return new CacheDatabaseServices(databaseConfiguration);
        }

        /// <summary>
        /// Returns a unique identifier of the database provider, used to identify it as a plugin
        /// </summary>
        public override DatabaseProviderKey Key {
            get { return DatabaseProviderKey.Deserialize("Cache"); }
        }

        /// <summary>
        /// Gets the <see cref="T:OutSystems.HubEdition.Extensibility.Data.IProviderProperties" /> instance associated with this database provider.
        /// </summary>
        /// <value>
        /// The provider properties.
        /// </value>
        public override IProviderProperties Properties {
            get { return properties; }
        }


        /// <summary>
        /// Returns an empty <see cref="T:OutSystems.HubEdition.Extensibility.Data.ConfigurationService.IIntegrationDatabaseConfiguration" />.
        /// </summary>
        /// <returns></returns>
        public override IIntegrationDatabaseConfiguration CreateEmptyIntegrationDatabaseConfiguration() {
            return new CacheDatabaseConfiguration();
        }
        
    }
}


