/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using OutSystems.HubEdition.Extensibility.Data.DatabaseObjects;

namespace OutSystems.HubEdition.DatabaseProvider.Cache.Introspection {

    /// <summary>
    /// Contains information about a table source foreign key.
    /// </summary>
    public class CacheTableSourceForeignKeyInfo : ITableSourceForeignKeyInfo {

        /// <summary>
        /// Initializes a new instance of the <see cref="CacheTableSourceForeignKeyInfo"/> class.
        /// </summary>
        /// <param name="tableSource">The table source.</param>
        /// <param name="name">The name.</param>
        /// <param name="columnName">Name of the column.</param>
        /// <param name="referencedTableSource">The referenced table source.</param>
        /// <param name="referencedColumnName">Name of the referenced column.</param>
        /// <param name="isCascadeDelete">if set to <c>true</c> [is cascade delete].</param>
        public CacheTableSourceForeignKeyInfo(ITableSourceInfo tableSource, string name, string columnName, ITableSourceInfo referencedTableSource, string referencedColumnName, bool isCascadeDelete) {
            TableSource = tableSource;
            Name = name;
            ColumnName = columnName;
            ReferencedTableSource = referencedTableSource;
            ReferencedColumnName = referencedColumnName;
            IsCascadeDelete = isCascadeDelete;
        }

        /// <summary>
        /// Table source that owns the foreign key.
        /// </summary>
        public ITableSourceInfo TableSource { get; private set; }

        /// <summary>
        /// Name that identifies the foreign key constraint.
        /// </summary>
        public string Name { get; private set; }

        /// <summary>
        /// Name of the column.
        /// </summary>
        public string ColumnName { get; private set; }

        /// <summary>
        /// Table source that owns the referenced column.
        /// </summary>
        public ITableSourceInfo ReferencedTableSource { get; private set; }

        /// <summary>
        /// Name of the referenced column.
        /// </summary>
        public string ReferencedColumnName { get; private set; }

        /// <summary>
        /// Returns True if the delete rule of the foreign key is CASCADE DELETE.
        /// </summary>
        public bool IsCascadeDelete { get; private set; }

    }
}
